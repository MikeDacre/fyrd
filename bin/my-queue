#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Print simple and fast queue information for only the current user.
============================================================================

        AUTHOR: Michael D Dacre, mike.dacre@gmail.com
  ORGANIZATION: Stanford University
       CREATED: 2015-12-18 12:43
 Last modified: 2016-08-31 18:10

   DESCRIPTION: Uses python-cluster to check the job queue for only
                one user's jobs. Produces a very simple display, for full
                job information, the regular tools can be used (e.g squeue)
                Output:
                    Job_number Job_name (tab-delimited)
                The output can be modified by the following flags:
                    -c count only
                    -l space separated job number list
                In addition, only running or queued jobs can be obtained:
                    -r running jobs
                    -q queued jobs

============================================================================
"""
from __future__ import print_function
import sys
import argparse
import cluster


def main(argv=None):
    """Parse command line options and print queue information."""

    parser  = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)

    j = parser.add_argument_group('Choose jobs to show, default is all')
    j.add_argument('-r', '--running', action='store_true',
                   help="Show running jobs only")
    j.add_argument('-q', '--queued', action='store_true',
                   help="Show queued jobs only")

    o = parser.add_argument_group('Choose alternate output style')
    o.add_argument('-c', '--count', action='store_true',
                   help="Display count only")
    o.add_argument('-l', '--list', action='store_true',
                   help="Print space separated list of job numbers")

    args   = parser.parse_args(argv)

    if args.running and args.queued:
        sys.stderr.write("ERROR --> You can't specify both " +
                         "'running' and 'queued'\n")
        return 1

    if args.count and args.list:
        sys.stderr.write("ERROR --> You can't specify both " +
                         "'count' and 'list'\n")
        return 2

    # Create queue object
    queue = cluster.Queue(user='self')
    if args.running:
        jobs = queue.running
    elif args.queued:
        jobs = queue.queued
    else:
        jobs = queue.jobs

    # Print requested output
    if args.count:
        print("{0}".format(str(len(jobs))))
    elif args.list:
        print("{0}".format(
            ' '.join(list([str(i) for i in jobs.keys()]))))
    else:
        for jid, job in jobs.items():
            try:
                print('{0}\t{1}'
                      .format(jid, job.name))
            except IOError:
                break

    # Done
    return 0

if __name__ == '__main__' and '__file__' in globals():
    sys.exit(main())
